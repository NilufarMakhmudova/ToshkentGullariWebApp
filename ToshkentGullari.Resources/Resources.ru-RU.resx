<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>О нас</value>
  </data>
  <data name="AddressLine" xml:space="preserve">
    <value>26А, ул Бухара, Ташкент, 100029</value>
  </data>
  <data name="AddressTitle" xml:space="preserve">
    <value>Физический адрес</value>
  </data>
  <data name="Ads" xml:space="preserve">
    <value>Объявления из SpeedyAd</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Обратно к списку</value>
  </data>
  <data name="CategoriesAll" xml:space="preserve">
    <value>Все</value>
  </data>
  <data name="CategoriesTitle" xml:space="preserve">
    <value>Продукты, которые мы предлагаем</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>контакт</value>
  </data>
  <data name="ContactSubtitle" xml:space="preserve">
    <value>Это легко войти в контакт с Тошкент Gullari.</value>
  </data>
  <data name="ContactSubtitleSmall" xml:space="preserve">
    <value>Мы бы мы рады услышать от вас.</value>
  </data>
  <data name="ContactTitle" xml:space="preserve">
    <value>Связаться с Toshkent Gullari</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Яркие и красочные цвета радуги, нежные ароматы цветов. Вы пришли в сказочный мир цветов - Салон "Цветы в Ташкенте." Это не только виртуальный флористика сеть - это настоящая флорист Ташкент. Салон "Цветы Ташкента" был основан более 25 лет назад, и является одним из первых цветочных магазинов столицы. С тех пор, мы стараемся, чтобы наши традиции обеспечения качества флористических услуг и в то же время, мы улучшаем каждый год, и повысить свою квалификацию, изучая новые цветочные тенденции и направления.</value>
  </data>
  <data name="DetailsTitle" xml:space="preserve">
    <value>Подробности</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Ошибка</value>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>Произошла ошибка при обработке вашего запроса.</value>
  </data>
  <data name="FormButtonMessage" xml:space="preserve">
    <value>Создать</value>
  </data>
  <data name="FormMessage" xml:space="preserve">
    <value>Оставьте ваше сообщение или мысли. Они более чем приветствуется!</value>
  </data>
  <data name="FormPhone" xml:space="preserve">
    <value>Телефон</value>
  </data>
  <data name="FormTitle" xml:space="preserve">
    <value>Контактная форма</value>
  </data>
  <data name="FormType" xml:space="preserve">
    <value>У меня есть</value>
  </data>
  <data name="FormUserMessage" xml:space="preserve">
    <value>Скажите это:</value>
  </data>
  <data name="FormUserName" xml:space="preserve">
    <value>Имя</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Здравствуйте</value>
  </data>
  <data name="LikeUS" xml:space="preserve">
    <value>Расскажи друзьям</value>
  </data>
  <data name="LockedOut" xml:space="preserve">
    <value>Заблокированный</value>
  </data>
  <data name="LockedOutMessage" xml:space="preserve">
    <value>Эта учетная запись была заблокирована, пожалуйста, повторите попытку позже.</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Войти</value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>Выйти</value>
  </data>
  <data name="MapTitle" xml:space="preserve">
    <value>Расположение на карте</value>
  </data>
  <data name="ProdectsIndexTitle" xml:space="preserve">
    <value>Добро пожаловать в коллекцию Toshkent Gullari!</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Продукт</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Продукты</value>
  </data>
  <data name="ProductsTitle" xml:space="preserve">
    <value>Toshkent Gullari | Крупнейший цветочный магазин в Ташкенте</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Регистрация</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Поиск</value>
  </data>
  <data name="SearchGoogle" xml:space="preserve">
    <value>Поиск по наши веб-сайты</value>
  </data>
  <data name="SortName" xml:space="preserve">
    <value>Имя</value>
  </data>
  <data name="SortPrice" xml:space="preserve">
    <value>Цена</value>
  </data>
  <data name="SortText" xml:space="preserve">
    <value>Сортировать продукты по:</value>
  </data>
  <data name="String" xml:space="preserve">
    <value />
  </data>
  <data name="String1" xml:space="preserve">
    <value />
  </data>
  <data name="String10" xml:space="preserve">
    <value />
  </data>
  <data name="String11" xml:space="preserve">
    <value />
  </data>
  <data name="String12" xml:space="preserve">
    <value />
  </data>
  <data name="String13" xml:space="preserve">
    <value />
  </data>
  <data name="String14" xml:space="preserve">
    <value />
  </data>
  <data name="String15" xml:space="preserve">
    <value />
  </data>
  <data name="String16" xml:space="preserve">
    <value />
  </data>
  <data name="String17" xml:space="preserve">
    <value />
  </data>
  <data name="String2" xml:space="preserve">
    <value />
  </data>
  <data name="String3" xml:space="preserve">
    <value />
  </data>
  <data name="String4" xml:space="preserve">
    <value />
  </data>
  <data name="String5" xml:space="preserve">
    <value />
  </data>
  <data name="String6" xml:space="preserve">
    <value />
  </data>
  <data name="String7" xml:space="preserve">
    <value />
  </data>
  <data name="String8" xml:space="preserve">
    <value />
  </data>
  <data name="String9" xml:space="preserve">
    <value />
  </data>
</root>